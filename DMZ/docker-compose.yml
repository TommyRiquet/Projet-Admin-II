version: '3'

services:
  server-web:
    # Attribue un nom au container du serveur WEB apache
    container_name: web-server-woodytoys
    build :
      # directives permettant de pouvoir indiquer au docker-compose où chercher le dockerfile pour l'image du serveur WEB apache
      context: ./WEB
      dockerfile: www/Dockerfile
    ports:
      # Attribue les ports 80 pour le container WEB
      - "80:80"
      - "443:443"
    networks:
      # Attribue une adresse IP au container WEB appartenant à la zone DMZ
      dmz_net:
        ipv4_address: 192.168.0.2
    links:
      - db
    volumes:
      - ./WEB/config/apache2.conf:/etc/apache2/apache2.conf:ro
      - ./WEB/config/sites-available/WoodyToys-vitrine.conf:/etc/apache2/sites-available/WoodyToys-vitrine.conf:ro
      - ./WEB/config/sites-available/WoodyToys-B2B.conf:/etc/apache2/sites-available/WoodyToys-B2B.conf:ro
      - ./WEB/www/WoodyToys/b2b/WoodyToys-B2B.php:/var/www/html/WoodyToys/b2b/index.php
  db:
    # Attribue un nom au container de la base de données MySQL
    container_name: container-mysql-woodytoysdb
    build:
      # directives permettant de pouvoir indiquer au docker-compose où chercher le dockerfile pour l'image de la base de données mysql
      context: ./WEB/DB/mysql
      dockerfile: Dockerfile
    environment:
      # Créé une base de données, attribue un mot de passe pour le root et utilisateur admin nouvellement créé
      MYSQL_DATABASE : woodytoys_db
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: "root"#TODO: change password
    restart: always
    # Attribution des ports 3306 pour le service MySQL
    ports:
      - "3306:3306"
    volumes:
      # Commande permettant de pouvoir insérer les données dans la DB depuis un fichier .sql
      - ./WEB/DB/db_woodytoys/db-data:/docker-entrypoint-initdb.d
  letsEncript:
    container_name: woodytoy-certs
    image: linuxserver/letsencrypt
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=l2-7.ephec-ti.be
      - SUBDOMAINS=www,b2b
      - VALIDATION=http
    volumes:
      - ./WEB/security/certs:/config
    ports:
      - "443:443"
    restart: unless-stopped
  soa-externe:
    container_name: dns-woodytoy
    build:
      context: ./DNS
      dockerfile: Dockerfile
    volumes:
      - ./DNS/config/named.conf:/etc/bind/named.conf
      - ./DNS/config/named.conf.options:/etc/bind/named.conf.options
      - ./DNS/config/named.conf.default-zones:/etc/bind/named.conf.default-zones
      - ./DNS/config/named.conf.local:/etc/bind/named.conf.local
      - ./DNS/config/db.l2-7.ephec-ti.be:/etc/bind/db.l2-7.ephec-ti.be
    ports:
      - "53:53"
    networks:
      # Attribue une adresse IP au container WEB appartenant à la zone DMZ
      dmz_net:
        ipv4_address: 192.168.0.1

      #Création du réseau de la zone DMZ, on y attribue son sous-réseau et sa passerelle par défaut
networks:
  dmz_net:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24

